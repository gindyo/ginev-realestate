angular.module('GinevDirectives',[]).directive 'ginevCarousel', ($timeout)->
  styles = document.createElement 'style'
  styles.innerHTML = '
    
    #test{
      transition: margin-left 1s;
      -webkit-transition: margin-left 1s;
      overflow: hidden;

    }

    #test img{
      float: left;
      width: 1170px;
      max-width: 1170px;
    }
    #active{
      transition: opacity 0.5s;
      -webkit-transition: opacity 0.5s;
    }


  '
  document.head.appendChild styles

  class Loopobject 
    adjasent = (arr, index)->
      if index == 0
        return [arr[arr.length-1], arr[1]]
      if index > arr.length - 1
        return [arr[index-1], arr[0]]
      return [arr[index-1], arr[index+1]]

    constructor: (items)->
      debugger
      @itemsContainer = items
      @items = []
      for el, i in items.children
        @items[i] = el
      
     # @itemsContainer.innerHTML = ''
      for el, i in @items
        elContaner = document.createElement('span')
        elContaner.innerHTML = el
       # @itemsContainer.innerHTML = @itemsContainer.innerHTML + elContaner
      console.log @itemsContainer
      

    next: (scope)->
      @items.push(@items.shift())
      for el, i in @items
        console.log el
        $('#test').append el
      margin = $('#test').css('margin-left').slice(0,-2)
      margin = parseInt(margin) - 1170
      $('#test').attr('style', 'margin-left:'+ margin+'px')
      

      console.log @itemsContainer
    previous: ->
      margin = $('#test').css('margin-left').slice(0,-2)
      console.log margin
      margin = parseInt(margin) + 1170
      $('#test').attr('style', 'margin-left:'+ margin+'px')
    
  return  {
    restrict: 'CE'
    scope: {caption: '='}
    transclude: true
    replace: false
    template: '
      <div class="row-fluid">
        <div ng-transclude id="test" class="span4">
      </div>
      </div>
        <div class="btn" ng-click="nextSlide()">Next</div>
           
    '
    link: (scope, element)->
      scope.maskWidth = (document.width-1170)/2
      scope.itemsLoop = new Loopobject(element.children()[0].children[0])
      scope.activeOpacity = 0
      
      $(window).resize ->
        scope.maskWidth = (document.width-1170)/2
        scope.$apply()          
      scope.nextSlide = ->
        button = event.target
        scope.itemsLoop.next(scope)

      scope.prevSlide = ->
        button = event.target
        $(button).hide()
        scope.activeOpacity = 0.5
        $timeout ->
          scope.activeOpacity = 0
          $(button).show()
        , 1000
        scope.itemsLoop.previous()
        

      
  }

